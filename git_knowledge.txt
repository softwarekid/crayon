1. git merge --abort : 撤销merge
2. git fetch origin --prune：将远程没有的删除
3. git checkout [<commit>] [--] <path>: 这种用法是将commit中的文件牵出来覆盖当前文件，如果commit省略就相当于从stage区中牵出文件 [--]的作用是当文件和commit重名的时候，用来标识是文件



stage 是指git add执行后的状态
origin 是指远端,可以看成是remote地址的别名
HEAD可以理解为当前branch名字的symbolic name
help中start point指的就是commit
rm -rf  lua/FF/GeneratedCode/Enum/CmdID.lua.orig
git cherry-pick e02b9f423987a0acb740e7af7f70b0656e4a64c3
gitk --all&
git checkout -b local_branch origin/remote_branch 创建一个新的名叫local_branch的分支，这个分支up-to-date到orign/remote_branch
git push origin localbranch:remotebranch 将本地分支推到服务器，如果服务器没有改分支就会创建一个
git push origin :remotebranch 删除服务器分支remotebranch，可以从上条命令的含义中推断这条命令的意义

跟踪当前branch到远端
git branch -u upstream/foo
if local branch foo is not the current branch:
git branch -u upstream/foo foo

cherry-pick可以把commit pick到分支，如果想将一个commit中的文件pick到分支只能用checkout commit_hash filename

git diff查看的是尚未暂存起来的变化
